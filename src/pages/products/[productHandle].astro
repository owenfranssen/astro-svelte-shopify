---
import StructuredData from '../../atoms/StructuredData.astro';
import Layout from '../../templates/Layout.astro';
import Breadcrumbs from '../../molecules/Breadcrumbs.astro';
import SingleImageLayout from '../../organisms/products/details/singleImageLayout.astro';
import GalleryLayout from '../../organisms/products/details/galleryLayout.astro';
import ProductGrid from '../../organisms/ProductGrid.astro';

// https://daily-dev-tips.com/posts/astro-moving-from-collections-to-dynamic-routing/
import { getProductsInCollection, getAllProducts } from '../../routes/api/get-products';
import { getProductDetails } from '../../routes/api/get-product-details';

export async function getStaticPaths({paginate}) {
	const result = await getAllProducts();
	const products = result.products.edges;
	return await Promise.all( products.map( async (p) => {
    const product = await getProductDetails(p.node.handle);
		return {
			params: {
				productHandle: product.handle
			},
			props: { product },
		};
	} ));
}
const { productHandle } = Astro.params;
const { product } = Astro.props;

const getSelectedOrFirstAvaialableVariant = (product) => {
	for(let variant of product.variants.edges) {
		if (variant.node.availableForSale) {
			return variant.node;
		}
	}
	return null;
};
const selectedOrFirstAvailableVariant = getSelectedOrFirstAvaialableVariant(product);

/* Featured products logic */
const getFeaturedProducts = async (product) => {
	// TODO:
  // Check metafields.product.custom.featured_products
  // if(products.length > 0) {
  //   return products;
  // }

  if(product.collections.edges.length > 0) {
    const products =  await getProductsInCollection(product.collections.edges[0].node.handle, 6);
    return await products.products.edges;
  }
  return [];
}

const featuredProducts = await getFeaturedProducts(product);
---

<Layout title={ product.title }>
	<main data-product-handle={productHandle}>
		<div class="bg-white pt-6">
      <!-- <Breadcrumbs page={product} /> -->

      {product.images.edges.length <= 1 && <SingleImageLayout product={product} selectedOrFirstAvailableVariant={selectedOrFirstAvailableVariant} />}
      {product.images.edges.length > 1 && <GalleryLayout product={product} selectedOrFirstAvailableVariant={selectedOrFirstAvailableVariant} />}

			{/* TODO: Should be hydrated - control products from Shopify without needing site rebuild */}
      <ProductGrid title="Our Favourites" products={featuredProducts} />

			{/* TODO: Secondary grid - alternbate style showing Recently Viewed products (based on cookie stored). Also Hydrated, update as products viewed per user */}
      <ProductGrid title="Recently Viewed" productHandle={productHandle} />
		</div>
	</main>
</Layout>

<StructuredData data={product} type="product" />