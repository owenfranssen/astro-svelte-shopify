---
import AddButton from '../../atoms/AddToBagButton.astro';
import ProductFormError from '../../atoms/ProductFormError.svelte';
import ColourVariant from './ColourVariant.astro';
import QuantitySelector from './QuantitySelector.astro';
import Variant from './Variant.astro';

import { productUrl } from '../../routes/api/utils/makeUrl.js';
import Theme from '../../assets/scripts/theme-settings.js'
export interface Props {
  product: object;
}
const { product, selectedOrFirstAvailableVariant } = Astro.props as Props;

const formId = product.id;
---

<form class="mt-10" data-product-form={formId} data-product-url={productUrl(product.handle)} data-product-option-count={product.options.length}>
  { product.options.length > 0 && product.options.map( (option, index) => {
    if (option.name == 'Colour' || option.name == 'Color')
      return <ColourVariant option={ option } optionIndex={index} />
    else
      return <Variant option={ option } optionIndex={index} />
  }) }
	{ product.options.length == 1 && <input type="hidden" name="" value="" /> }

	<QuantitySelector product={product} />

	<AddButton label={Theme.Settings.locale.product_form.add_to_cart} />

	<ProductFormError client:only />

	{/* All variant selector for product ids to send to cart - also no-js fallback */}
	{/* TODO: Variant options should be hydrated...? */}
	<div class="product-form__input product-form__input--dropdown hidden no-js" id="all-variant-ids">
		<label for="quantity-0" class="sr-only">Product variants</label>
		<select name="id"
				class="form__dropdown"
				form={formId}
				data-variant-selected>
      { product.variants.edges.map( (variant) => {
          variant = variant.node;
          if(variant.availableForSale) {
            if(variant.id == selectedOrFirstAvailableVariant.id) {
              return <option
                value={variant.id}
                selected
              >
                {variant.title}
                - {variant.priceV2.currencyCode}{variant.priceV2.amount}
              </option>
            }
            return <option
              value={variant.id}
            >
              {variant.title}
              - {variant.priceV2.currencyCode}{variant.priceV2.amount}
            </option>
          }
        }
      )}
		</select>
	</div>

	{/* Master quantity input to send to cart - also no-js fallback */}
	{/* TODO: Product availability needs to be hydrated... */}
	<div class="product-form__quantity-selector--dropdown product-form__input product-form__input--dropdown hidden no-js">
		<label for="quantity-0" class="form__label{% unless form_settings.show_labels %} sr-only{% endunless %}">{Theme.Settings.locale.product_form.quantity}</label>
		<select name="quantity"
				class="form__dropdown"
				id="quantity-0"
				form={formId}>
			{ [...Array(product.totalInventory)].map((i, index) => <option value={index+1}>{index+1}</option>)}
		</select>
	</div>
</form>

{/* TODO: Make this json data hydrated */}
<script type="application/json" data-product-id={formId} is:inline set:html={JSON.stringify(product.variants.edges)}></script>

<script>
	import '../../assets/scripts/product-form.js';

	window.addEventListener('load', event => {
		Theme.jsProductForm.init();
	})
</script>
