---
import CheckoutButton from '../atoms/CheckoutButton.svelte';
import Icon from '../atoms/Icon.astro';
import CartContents from '../organisms/CartContents.svelte';
const drawerId = "mini-cart";
---
<div id={drawerId} data-drawer-content class="relative z-10" aria-labelledby="slide-over-title" role="dialog" aria-modal="true">
  <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity uiOverlay" data-drawer-control={drawerId}></div>

  <div class="fixed overflow-hidden">
    <div class="absolute inset-0 overflow-hidden">
      <div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10">
        <div class="pointer-events-auto w-screen max-w-md uiDrawerContents">
          <div class="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">
            <div class="py-6 px-4 sm:px-6">
              <div class="flex items-start justify-between">
                <h2 class="text-lg font-medium text-gray-900" id="slide-over-title">Shopping cart</h2>
                <div class="ml-3 flex h-7 items-center">
                  <button type="button" class="-m-2 p-2 text-gray-400 hover:text-gray-500" data-drawer-control={drawerId}>
                    <span class="sr-only">Close panel</span>
										<Icon name="x" />
                  </button>
                </div>
              </div>
						</div>

						<CartContents client:visible />

						<div class="pb-6 px-4 sm:px-6">
							<p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
							<div class="mt-6">
								<CheckoutButton client:visible />
							</div>
							<div class="mt-6 flex justify-center text-center text-sm text-gray-500">
								<p>
									or <button type="button" class="font-medium text-primary hover:text-indigo-500" data-drawer-control={drawerId}>Continue Shopping<span aria-hidden="true"> &rarr;</span></button>
								</p>
							</div>
						</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
	[data-drawer-content] {
		@apply delay-500 opacity-0 pointer-events-none;

    .uiOverlay {
      @apply ease-in-out duration-500 opacity-0;
    }

    .uiDrawerContents {
      @apply transform transition ease-in-out duration-500 sm:duration-700 translate-x-full;
    }
	}

	[data-drawer-content].display {
		@apply opacity-100 pointer-events-auto;
    transition-delay: 0ms;

    .uiOverlay {
      @apply ease-in-out duration-500 opacity-100;
    }

    .uiDrawerContents {
      @apply transform transition ease-in-out duration-500 sm:duration-700 translate-x-0;
    }
	}
</style>
